/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package bouncingball;

import java.awt.Color;
import java.awt.Graphics;
import java.security.SecureRandom;
import javax.swing.JPanel;

/**
 *
 * @author markoc
 */
public class DrawPanel extends JPanel{
    int ballCounter = 0;
    Ball[] balls = new Ball[20];
    Thread animation = new Thread(new Animation());
    /**
     * Creates new form DrawPanel
     */
    public DrawPanel() {
	initComponents();
	this.setBackground(Color.WHITE);
	animation.setDaemon(false);
	animation.start();
    }
    
    public void addBall(int x, int y)
    {
	if(this.ballCounter == this.balls.length)
	    return;
	
	SecureRandom sr = new SecureRandom();
	this.balls[this.ballCounter] = new Ball(x, y, this);
	this.ballCounter++;
    }
    
    @Override
    public void paintComponent(Graphics g){
	super.paintComponent(g);
	for(int i=0;i<balls.length;i++)
	{
	    if(balls[i] == null)
	    {
		g.dispose();
		break;
	    }
	    
	    int[] data = balls[i].getShadowData();
	    g.setColor(balls[i].getShadowColor());
	    g.fillOval(data[0], data[1], data[2], data[3]);
	    
	    data = balls[i].getBallData();
	    g.setColor(balls[i].getBallColor());
	    g.fillOval(data[0], data[1], data[2], data[3]);
	    balls[i].moveBall();
	}
    } 
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                formMousePressed(evt);
            }
        });
        addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentResized(java.awt.event.ComponentEvent evt) {
                formComponentResized(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents

    private void formMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_formMousePressed
	addBall(evt.getX(), evt.getY());
    }//GEN-LAST:event_formMousePressed

    private void formComponentResized(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_formComponentResized
        for(Ball ball : balls)
	{
	    if(ball == null)
		break;
	    ball.setGridHeight(this.getHeight()-(int)(ball.getShadowHeight()/2));
	    ball.setGridWidth(this.getWidth());
	}
    }//GEN-LAST:event_formComponentResized

    private class Animation implements Runnable
    {	
	@Override
	public void run() {		
	    while (true) {
                try {
                    Thread.sleep(40);
                } catch (Exception e) {
                    System.out.println(e.getMessage());
                }
                repaint();
            }
	}
	
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
}

